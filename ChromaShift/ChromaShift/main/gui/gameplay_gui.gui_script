local score_text = "Distance Travelled: "
function init(self)
	-- Add initialization code here
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")

	-- hide mute button
	gui.set_enabled(gui.get_node("mute"), false)
	self.mute = false

	-- set version
	local version = gui.get_node("version")
	gui.set_enabled(version, false)
	gui.set_text(version, Util.VERSION)

	-- set true or comment out for debug only
	gui.set_enabled(gui.get_node("debug"), false)
	
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	-- Add update code here	
	-- Remove this function if not needed
	gui.set_text(gui.get_node("debug"), Screen_Width)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set_score") then
		local s = gui.get_node("score")
		--gui.set_text(s, score_text .. message.score .."m")
		gui.set_text(s, string.format("%s %dm",score_text, message.score))
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		local button = gui.get_node("pause")
		local mute = gui.get_node("mute")
		local version = gui.get_node("version")
		if gui.pick_node(button, action.x, action.y) and not Util.Tutorial and not Util.Game_Over then 
			Util.Pause = not Util.Pause

			if Util.Pause then
				gui.play_flipbook(button, "Play_Button")
				gui.set_enabled(mute, true)
				gui.set_enabled(version, true)
			else
				gui.play_flipbook(button, "Pause_Button")
				gui.set_enabled(mute, false)
				gui.set_enabled(version, false)
			end
		end
		if gui.pick_node(mute, action.x, action.y) and gui.is_enabled(mute) then
			msg.post("/bg_music#bg_music_script", "mute")
			self.mute =  not self.mute
			if self.mute then
				gui.play_flipbook(mute, "mute")
			else
				gui.play_flipbook(mute, "volume_up")
			end
		end
	end
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
